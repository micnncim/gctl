#!/bin/bash

set -e

declare GCTX_GCLOUD_CONFIGURATION="${GCTX_GCLOUD_CONFIGURATION:-default}"

readonly EXECUTABLES=(gcloud fzf)

usage() {
  cat <<EOF
Manage GCP configurations.

Subcommands:

  account|a           switch an account
  configuration|c     switch a configuration
  project|p           switch a project
  help|--help|-h      show help

Dependencies: ${EXECUTABLES[@]}

EOF
}

# Verify if executables are in the PATH.
check_executables() {
  for e in "${EXECUTABLES[@]}"; do
    if ! type -p "${e}" >/dev/null; then
      echo "${e} not found on the system" >&2
      return 1
    fi
  done
}

switch_account() {
  gcloud config set account "$(list_accounts | fzf)"
  gcloud config configurations activate "${GCTX_GCLOUD_CONFIGURATION}"

  if ask "Do you want to run the following command to update your access?" >&2; then
    gcloud auth login --update-adc
  fi
}

switch_configuration() {
  gcloud config configurations activate "$(list_configurations | fzf)"
}

# TODO(micnncim): The number of projects can be massive and if so the `gcloud`
# command will be extremely slow.
switch_project() {
  gcloud config set project "$(list_projects | fzf)"
}

list_accounts() {
  gcloud auth list --format="value(account)"
}

list_configurations() {
  gcloud config configurations list --format="value(name)"
}

list_projects() {
  gcloud projects list --format="value(projectId)"
}

# Return 0 if success, which we interpret as 'yes'. Otherwise, return 1.
ask() {
  local -r prompt="$1"
  local answer=""

  while [[ ! "${answer}" =~ ^[YyNn]$ ]]; do
    read -rp "${prompt} (Y/n): " answer
    answer=${answer:-Y}
  done

  if [[ "${answer}" =~ ^[Yy]$ ]]; then
    return 0
  else
    return 1
  fi
}

main() {
  if [[ "$#" -lt 1 ]]; then
    usage
    return 1
  fi

  if ! check_executables; then
    usage
    return 1
  fi

  local -r cmd="${1}"

  case $cmd in
    'account' | 'a')
      switch_account
      ;;
    'configuration' | 'c')
      switch_configuration
      ;;
    'project' | 'p')
      switch_project
      ;;
    'help' | '--help' | '-h')
      usage
      return 0
      ;;
    *)
      usage
      return 1
      ;;
  esac
}

main "$@"
